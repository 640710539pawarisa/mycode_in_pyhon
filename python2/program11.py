#Arguments(args,kwargs)
#args = arguments แบบลำดับ
#kwargs = keyword arguments แบบกำหนดชื่อ

#arg/kwargs ที่เราส่งมาจากการเรียกใช้ฟังก์ชัน

#อยากจะข้อมูลมาทำงานที่ ฟังก์ชัน saveemployee นอกเหนือใส่ชื่อพนักงานและแผนก และเงินเดือน 
# ****  เราต้องใส่ที่อยู่ด้วยให้พนักงาน ตัวแปรชื่อ address และเพิ่มเข้าไปในฟังก์ชันparameter
# ****ปัญหาที่เกิดคือ ถ้ากรณีมีparameter เกินเก็บไม่ได้ หรือหลายตัวละ จะทำยังไง ปัญหาถัดมา 
# ตอนที่เราเรียกใช้ ฟังก์ชัน saveemployee เราส่งข้อมูลไป3ตัว แต่เราเรียกใช้ฟังก์ชัน 4ตัว  เพราะไม่ได้ใส่ที่อยู่ตรงนี้argument ให้เรา
#ระบุลงไปเพิ่ม เช่น saveemployee("คุณโคล่า","กราฟิก",20000,"กรุงเทพ")

#****แบบเดิม****

# def saveemployee(name,department,salary,address ): #ชื่อฟังก์ชัน saveemployee คือ ฟังก์ชันสําหรับบันทึกข้อมูลพนักงาน ,
#     #, name เก็บชื่อพนักงาน , department เก็บแผนก , salary เก็บเงินเดือน , address เก็บที่อยู่
#     print(f"ชื่อพนักงาน {name} , แผนก {department}")
#     print(f"เงินเดือน {salary} บาท")
#     print(f"ที่อยู่ {address}")
#     print("----------------------------------")
    
    
#*******แบบใหม่*******
    #************8วิธีแก้ parameter เยอะเกินไป************
    
#แบบที่ 1 ข้มูลแบบลำดับ *args 
# ให้สร้างตัวแปร และ*args หรือ ใช้ *args แบบลำดับ ในฟังก์ชันparameter เช่น
def saveemployee(*args): #args คือ ตัวแปรส่ง ,ถ้าใส่* ตัวargs จะเป็น tuple แต่ถ้าไม่ใส่* ตัวargs จะเป็น parameter ปกติ
    #*argsมันส่งมาเป็นtupleแล้วมากระจาย ****สามารถเปลี่ยนชื่อได้แต่การทำงานมันเหมือนเดิม เช่น *data ก็ได้********
    
    print(f"ชื่อพนักงาน {args[0]} , แผนก {args[1]}")#args[0] = คุณเอ๊ะ , args[1] = คอมพิวเตอร์
    print(f"เงินเดือน {args[2]} บาท")#args[2] = 30000
    print(f"ที่อยู่ {args[3]}")#args[3] = กรุงเทพ
    print("----------------------------------")
    
    #การเรียกใช้ฟังก์ชัน ทุกอันที่เราสร้าง
print("ผลลัพธ์แบบที่ 1 ข้มูลแบบลำดับ *args")
print("----------------------------------")

#สร้างฟังก์ชันสำหรับให้บริการบันทึกข้อมูลของพนักงานลงในระบบ
saveemployee("คุณเอ๊ะ","คอมพิวเตอร์",30000,"กรุงเทพ")
# คุณเอ๊ะอยู่ในargs[0] , คอมพิวเตอร์อยู่ในargs[1], 30000อยู่ในargs[2] , กรุงเทพอยู่ในargs[3] 
# เราส่งข้อมูลตามลำดับการส่งข้อมูล เพราะ argsเก็บข้อมูลแบบลำดับ   
saveemployee("คุณโคล่า","กราฟิก",20000,"กรุงเทพ")
saveemployee("คุณเซเว่น","การตลาด ",25000,"กรุงเทพ")
saveemployee("คุณแจน","บัญชี",30000,"กรุงเทพ") 

# *args ให้จำลำดับ เพราะเราส่งข้อมูลตามลำดับ**************8
    #-------------------------------------------------------------------------------

#หรือ แบบที่ 2 ข้มูลแบบกําหนดชื่อ **kwargs
# ใช้ kwargs แบบกําหนดชื่อ จะอยู่ในรูปแบบ dictionary ในฟังก์ชันparameter เช่น

def saveemployee(**kwargs):#dictionary
    print(f"ชื่อพนักงาน {kwargs['name']} , แผนก {kwargs['department']}")
    print(f"เงินเดือน {kwargs['salary']} บาท")
    print(f"ที่อยู่ {kwargs['address']}")
    print("----------------------------------")

# การเรียกใช้ฟังก์ชัน ทุกอันที่เราสร้าง
print("ผลลัพธ์แบบที่ 2 ข้มูลแบบกําหนดชื่อ **kwargs")
print("---------------------------------------")
#สร้างฟังก์ชันสำหรับให้บริการบันทึกข้อมูลของพนักงานลงในระบบ
saveemployee(name="คุณเอ๊ะ",department="คอมพิวเตอร์",salary=30000,address="กรุงเทพ")
saveemployee(name="คุณโคล่า",department="กราฟิก",salary=20000,address="กรุงเทพ")
saveemployee(name="คุณเซเว่น",department="การตลาด ",salary=25000,address="กรุงเทพ")
saveemployee(name="คุณแจน",department="บัญชี",salary=30000,address="กรุงเทพ") 

#**kwargs ให้จำชื่อ เพราะเราส่งข้อมูลตามชื่อ************************88

#****argument คือ ตัวแปรส่ง , parameter คือ ตัวแปรรับ****
#------------------------------------------------------------------------------- 




